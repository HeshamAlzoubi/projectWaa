# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none
#- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)/frontEnd/'
  displayName: 'npm install'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/frontEnd/'
    customCommand: 'run build:Prod'
  displayName: 'Npm build production'

- task: ArchiveFiles@2
  name: 'ArchiveTheBuild'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/frontEnd/build/'
    includeRootFolder: false
    archiveType: 'tar'
    archiveFile: '$(Build.ArtifactStagingDirectory)/waafrontend-$(Build.BuildId).tar'
    replaceExistingArchive: true
  displayName: 'Archive build production'

- task: PublishBuildArtifacts@1
  name: 'PublishBuildToAzureDevops'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'waafrontend'
    publishLocation: 'Container'
  displayName: 'Publish front-end build to AzureDevops Artifacts'
- task: SSH@0
  inputs:
    sshEndpoint: 'localserver'
    runOptions: 'commands'
    commands: 'rm -rf /opt/WAA/frontend/caddy/caddy_html/*'
    readyTimeout: '20000'
  displayName: 'Clean html folder in the production server'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'localserver'
    sourceFolder: '$(System.DefaultWorkingDirectory)/frontEnd/build/'
    contents: '**'
    targetFolder: '/opt/WAA/frontend/caddy/caddy_html/'
    readyTimeout: '20000'
  displayName: 'Deploy frontend build to production server'